import com.azul.crs.client.sysinfo.SystemInfoProvider
import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

import java.nio.file.Files
import java.nio.file.StandardCopyOption

plugins {
    id 'java'
}


group = 'net.hellcat.mc.plugins.nophantom'
version = '1.0.0'

repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.2')
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    compileOnly 'org.spigotmc:spigot-api:1.19.2-R0.1-SNAPSHOT'
}

test {
    useJUnitPlatform()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.register('buildSpigot',Copy) {
    String mcVersion = "1.19.2"
    String spigotJarName = "spigot-" + mcVersion + ".jar"
    File debugDir = new File(projectDir,"debug")
    File serverJar = new File(debugDir, "server.jar")
    File buildFile

    if (!serverJar.isFile()) {
        buildFile = buildSpigotServerJar(mcVersion)
        Files.copy(buildFile.toPath(),serverJar.toPath(), StandardCopyOption.REPLACE_EXISTING)
    }
}

File buildSpigotServerJar(String mcVersion) {
    Process process
    ProcessBuilder processBuilder
    InputStreamReader inputStreamReader
    BufferedReader bufferedReader
    List<String> commandLineArgs
    String java = System.getProperty("java.home") + File.separator + "bin" + File.separator + "java"
    File buildTools = downloadBuildTools()
    File spigotJarLocation = new File(buildTools.parentFile,"spigot-" + mcVersion + ".jar")

    if (spigotJarLocation.isFile()) {
        return spigotJarLocation
    }

    if (DefaultNativePlatform.currentOperatingSystem.windows) {
        java += ".exe"
    }

    commandLineArgs = List.of(java,"-jar",buildTools.absoluteFile.toString(),"--rev",mcVersion)
    processBuilder = new ProcessBuilder(commandLineArgs).directory(buildTools.parentFile)
    processBuilder.redirectErrorStream(true)
    process = processBuilder.start()

    inputStreamReader = new InputStreamReader(process.getInputStream())
    bufferedReader = new BufferedReader(inputStreamReader)
    while (bufferedReader.readLine() != null) {
        println bufferedReader.readLine()
    }

    inputStreamReader.close()
    bufferedReader.close()
    process.destroy()

    return spigotJarLocation
}

File downloadBuildTools() {
    URL buildToolsURL = new URL("https://hub.spigotmc.org/jenkins/job/BuildTools/lastSuccessfulBuild/artifact/target/BuildTools.jar")
    File buildDir = new File(projectDir,"build")
    File spigotTmp = new File(buildDir,"spigot")
    File buildTools = new File(spigotTmp,"buildtools.jar")
    return downloadFile(buildToolsURL,buildTools)
}

File downloadFile(URL url, File saveAs) {
    InputStream serverIn
    if (!saveAs.parentFile.isDirectory()) {
        saveAs.parentFile.mkdir()
    }
    if (!saveAs.isFile()) {
        serverIn = url.openStream()
        Files.copy(serverIn,saveAs.toPath())
        serverIn.close()
    }
    return saveAs.absoluteFile
}